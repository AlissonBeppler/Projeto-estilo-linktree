* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --text-color: white;
  --bg-url: url(./assets/bg-mobile.jpg);
  --stroke-color: rgba(255, 255, 255, 0.5);
  --surface-color: rgba(255, 255, 255, 0.05);
  --surface-color-hover: rgba(0, 0, 0, 0.02);
  --highlight-color: rgba(255, 255, 255, 0.2);
  --switch-bg-url: url(./assets/MoonStars.svg);
}

.light {
  --text-color: black;
  --bg-url: url(./assets/bg-mobile-light.jpg);
  --stroke-color: rgba(0, 0, 0, 0.5);
  --surface-color: rgba(0, 0, 0, 0.05);
  --surface-color-hover: (0, 0, 0, 0.02);
  --highlight-color: rgba(0, 0, 0, 0.1);
  --switch-bg-url: url(./assets/Sun.svg);
}

body {
  /*
  background-image: url(./assets/bg-mobile.jpg);
  background-repeat: no-repeat;
  background-position: top center;
  background-size: cover;

  todas essas instuções podem ser compactadas em uma única linha de código, usando:

  backgroung :url() color image repeat position/size (size precisa obrigatoriamente de uma barra antes)
  */

  background: var(--bg-url) no-repeat top center/cover;
  height: 100vh;
}

body * {
  font-family: "inter", sans-serif;
  color: var(--text-color);
}

#container {
  width: 100%;
  max-width: 588px;
  margin: 56px auto 0px; /*a margin auto alinha apenas as laterais da div.*/
  padding: 0 24px;
}

/*profile*/

#profile {
  text-align: center;
  padding: 24px;
}

#profile img {
  /*Para centralizar a img, cria um #profile "pai" antes deste profile aberto, e neste profile pai definir uma propriedade text-align. Isso ocorre pelo fato do profile inline permitir que o text align defina em que parte da linha ficará a informação, pode ser no centro, na esquerda, na direita.
  */
  width: 112px;

  /*Há tambem a opção de forçar um display do tipo block (bloco), aqui o margin não irá funcionar, o margin alinha apenas elementos do tipo block, a imagem é considerada um elemento do tipo inline, deve ser forçado um display de tipo block para permitir o alinhamento da imagem.
  
  display: block;
  width: 112px;
  margin: auto;
  */
}

#profile p {
  font-weight: 500;
  line-height: 24px;
  margin-top: 8px;
}

/*switch*/

#switch {
  position: relative;
  width: 64px;
  margin: 4px auto;
}

#switch button {
  width: 32px;
  height: 32px;
  background: white var(--switch-bg-url) no-repeat center;
  border: 0;
  border-radius: 50%;

  position: absolute;
  top: 50%;
  left: 0;
  z-index: 1;
  transform: translateY(-50%);
}

.light #switch button {
  right: 0;
  left: initial;
}

#switch span {
  display: block;
  width: 64px;
  height: 24px;
  background: var(--surface-color);
  border: 1px solid var(--stroke-color);
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  border-radius: 9999px;
}

/*links*/

ul {
  list-style: none;

  display: flex;
  flex-direction: column;
  gap: 16px;

  padding: 24px 0;
}

ul li a {
  display: flex;
  justify-content: center;

  padding: 16px 24px;

  background: var(--surface-color);
  border: 1px solid var(--stroke-color);
  border-radius: 8px;

  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);

  text-decoration: none;
  font-weight: 500;

  transition: background 0.2s;
}

/*pseudo seletor*/
ul li a:hover {
  background: var(--surface-color-hover);
  border: 1px solid var(--text-color);
}

/*links sociais*/
#social-links {
  display: flex;
  justify-content: center;

  padding: 24px 0;

  font-size: 24px;
}

#social-links a {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 16px;

  transition: background 0.2s;
  border-radius: 50%;
}

#social-links a:hover {
  background: var(--highlight-color);
}

footer {
  padding: 24px 0;
  text-align: center;
}

/* media queries */
@media (min-width: 700px) {
  :root {
    --bg-url: url(./assets/bg-desktop.jpg);
  }

  .light {
    --bg-url: url(./assets/bg-desktop-light.jpg);
  }
}
